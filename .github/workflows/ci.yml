name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: quantum_writer_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Test Story Service
      working-directory: ./services/story
      run: |
        pip install -r requirements.txt
        pytest --cov=app tests/
        
    - name: Lint Backend
      run: |
        pip install ruff
        ruff check services/

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Lint
      working-directory: ./frontend
      run: npm run lint
      
    - name: Type check
      working-directory: ./frontend
      run: npx tsc --noEmit
      
    - name: Test
      working-directory: ./frontend
      run: npm run test:ci
      
    - name: Build
      working-directory: ./frontend
      run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build images
      run: |
        docker-compose build --parallel
        
    - name: Run integration tests
      run: |
        docker-compose up -d
        sleep 30
        curl -f http://localhost:8000/health || exit 1
        curl -f http://localhost:3000 || exit 1
        docker-compose down